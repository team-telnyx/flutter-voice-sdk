// Mocks generated by Mockito 5.2.0 from annotations
// in telnyx_webrtc/test/tx_socket_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:telnyx_webrtc/tx_socket.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [TxSocket].
///
/// See the documentation for Mockito's code generation for more information.
class MockTxSocket extends _i1.Mock implements _i2.TxSocket {
  MockTxSocket() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get hostAddress =>
      (super.noSuchMethod(Invocation.getter(#hostAddress), returnValue: '')
          as String);
  @override
  _i2.OnOpenCallback get onOpen =>
      (super.noSuchMethod(Invocation.getter(#onOpen), returnValue: () {})
          as _i2.OnOpenCallback);
  @override
  set onOpen(_i2.OnOpenCallback? _onOpen) =>
      super.noSuchMethod(Invocation.setter(#onOpen, _onOpen),
          returnValueForMissingStub: null);
  @override
  _i2.OnMessageCallback get onMessage =>
      (super.noSuchMethod(Invocation.getter(#onMessage),
          returnValue: (dynamic msg) {}) as _i2.OnMessageCallback);
  @override
  set onMessage(_i2.OnMessageCallback? _onMessage) =>
      super.noSuchMethod(Invocation.setter(#onMessage, _onMessage),
          returnValueForMissingStub: null);
  @override
  _i2.OnCloseCallback get onClose =>
      (super.noSuchMethod(Invocation.getter(#onClose),
          returnValue: (int code, String reason) {}) as _i2.OnCloseCallback);
  @override
  set onClose(_i2.OnCloseCallback? _onClose) =>
      super.noSuchMethod(Invocation.setter(#onClose, _onClose),
          returnValueForMissingStub: null);
  @override
  void connect() => super.noSuchMethod(Invocation.method(#connect, []),
      returnValueForMissingStub: null);
  @override
  void send(dynamic data) =>
      super.noSuchMethod(Invocation.method(#send, [data]),
          returnValueForMissingStub: null);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
