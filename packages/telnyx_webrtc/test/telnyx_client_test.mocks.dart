// Mocks generated by Mockito 5.2.0 from annotations
// in telnyx_webrtc/test/telnyx_client_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:telnyx_webrtc/call.dart' as _i3;
import 'package:telnyx_webrtc/config/telnyx_config.dart' as _i7;
import 'package:telnyx_webrtc/model/telnyx_message.dart' as _i5;
import 'package:telnyx_webrtc/model/telnyx_socket_error.dart' as _i6;
import 'package:telnyx_webrtc/telnyx_client.dart' as _i4;
import 'package:telnyx_webrtc/tx_socket.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTxSocket_0 extends _i1.Fake implements _i2.TxSocket {}

class _FakeCall_1 extends _i1.Fake implements _i3.Call {}

/// A class which mocks [TelnyxClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockTelnyxClient extends _i1.Mock implements _i4.TelnyxClient {
  MockTelnyxClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.OnSocketMessageReceived get onSocketMessageReceived =>
      (super.noSuchMethod(Invocation.getter(#onSocketMessageReceived),
              returnValue: (_i5.TelnyxMessage message) {})
          as _i4.OnSocketMessageReceived);
  @override
  set onSocketMessageReceived(
          _i4.OnSocketMessageReceived? _onSocketMessageReceived) =>
      super.noSuchMethod(
          Invocation.setter(#onSocketMessageReceived, _onSocketMessageReceived),
          returnValueForMissingStub: null);
  @override
  _i4.OnSocketErrorReceived get onSocketErrorReceived =>
      (super.noSuchMethod(Invocation.getter(#onSocketErrorReceived),
              returnValue: (_i6.TelnyxSocketError message) {})
          as _i4.OnSocketErrorReceived);
  @override
  set onSocketErrorReceived(
          _i4.OnSocketErrorReceived? _onSocketErrorReceived) =>
      super.noSuchMethod(
          Invocation.setter(#onSocketErrorReceived, _onSocketErrorReceived),
          returnValueForMissingStub: null);
  @override
  _i2.TxSocket get txSocket => (super.noSuchMethod(Invocation.getter(#txSocket),
      returnValue: _FakeTxSocket_0()) as _i2.TxSocket);
  @override
  set txSocket(_i2.TxSocket? _txSocket) =>
      super.noSuchMethod(Invocation.setter(#txSocket, _txSocket),
          returnValueForMissingStub: null);
  @override
  set sessid(String? _sessionId) =>
      super.noSuchMethod(Invocation.setter(#sessionId, _sessionId),
          returnValueForMissingStub: null);
  @override
  _i3.Call get call =>
      (super.noSuchMethod(Invocation.getter(#call), returnValue: _FakeCall_1())
          as _i3.Call);
  @override
  set call(_i3.Call? _call) =>
      super.noSuchMethod(Invocation.setter(#call, _call),
          returnValueForMissingStub: null);
  @override
  set storedCredentialConfig(_i7.CredentialConfig? _storedCredentialConfig) =>
      super.noSuchMethod(
          Invocation.setter(#storedCredentialConfig, _storedCredentialConfig),
          returnValueForMissingStub: null);
  @override
  set storedTokenConfig(_i7.TokenConfig? _storedTokenConfig) => super
      .noSuchMethod(Invocation.setter(#storedTokenConfig, _storedTokenConfig),
          returnValueForMissingStub: null);
  @override
  bool isConnected() => (super.noSuchMethod(Invocation.method(#isConnected, []),
      returnValue: false) as bool);
  @override
  String getGatewayStatus() =>
      (super.noSuchMethod(Invocation.method(#getGatewayStatus, []),
          returnValue: '') as String);
  @override
  void connect() => super.noSuchMethod(Invocation.method(#connect, []),
      returnValueForMissingStub: null);
  @override
  _i3.Call createCall() =>
      (super.noSuchMethod(Invocation.method(#createCall, []),
          returnValue: _FakeCall_1()) as _i3.Call);
  @override
  void credentialLogin(_i7.CredentialConfig? config) =>
      super.noSuchMethod(Invocation.method(#credentialLogin, [config]),
          returnValueForMissingStub: null);
  @override
  void tokenLogin(_i7.TokenConfig? config) =>
      super.noSuchMethod(Invocation.method(#tokenLogin, [config]),
          returnValueForMissingStub: null);
  @override
  void disconnect() => super.noSuchMethod(Invocation.method(#disconnect, []),
      returnValueForMissingStub: null);
}
